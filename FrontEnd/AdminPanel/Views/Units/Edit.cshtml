@model IAUAdmin.DTO.Entity.UnitsDTO
@{
    ViewBag.Title = "Edit Category";
    ViewBag.pTitle = "Edit Category";
    ViewBag.pageTitle = "Categories";
    ViewBag.arTitle = "تعديل فئة";
    ViewBag.arpageTitle = "تعديل فئة";
    ViewBag.arpTitle = "الفئات الادارية";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!-- select2 css -->
<link href="~/assets/libs/select2/css/select2.min.css" rel="stylesheet" type="text/css" />

<!-- dropzone css -->
<link href="~/assets/libs/dropzone/min/dropzone.min.css" rel="stylesheet" type="text/css" />
<!-- Sweet Alert-->
<link href="~/assets/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />
<style>
	label.control-label::after {
		content: ":";
	}

	#CodeGenrateDiv input {
		border: 1px solid;
	}

	span.select2 {
		width: 100% !important
	}

	label#TypeCode, #SubTypeCode, #SubTypeLevel {
		width: 100% !important;
		padding: 4px 16px !important;
		border: 1px solid #aaa !important;
		border-radius: 6px !important;
		/* font-size: 11px; */
		/*font-weight: bold;*/
		font-size: 14px;
	}

	span.select2-selection.select2-selection {
		height: 36px !important;
	}

	#CodeGenrateDiv {
		display: inline-flex;
		width: 100%;
		align-items: center;
		justify-content: center;
		direction: ltr !important;
	}

		#CodeGenrateDiv input {
			margin: 0 5px;
			width: 33px;
		}

	label.control-label {
		font-weight: bold;
	}

	.select2-selection__rendered {
		font-weight: normal;
		direction:@(Request.Cookies["lang"].Value=="ar"?"rtl":"ltr")
	}
	.select2-results__option{
		direction:@(Request.Cookies["lang"].Value=="ar"?"rtl":"ltr")
	}

	.select2-selection__rendered, .select2-selection__arrow {
		margin-top: 3px;
	}
</style>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="row justify-content-center">
                    <div class="form-group">
                        <label class="control-label" key="t-title-unitrefnum" for="servicetype">Code</label>
                        <div style="display:inline-flex" id="CodeGenrateDiv">
                            <span>@Model.Ref_Number</span>
                            @{
                                var Codes = Model.Ref_Number.ToCharArray();
                                for (int i = 0; i < 15; i++)
                                {
                                    if (Codes.Length - 1 < i)
                                    {
                                        <input class="form-control Genratedcode en-font" value="@(Codes[i])" disabled />
                                    }
                                    else
                                    {
                                        <input class="form-control Genratedcode en-font" value="@(Codes[i])" disabled />
                                    }
                                }

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @{
                    var lang = Request.Cookies["lang"].Value;
                    @Html.Hidden("ss", lang, new { @id = "lang" })
                    @Html.Hidden("UnitID", Model.Units_ID, new { @id = "UnitID" })
                }
                <h4 class="card-title" key="t-basicInfo">Basic Information</h4>

                @using (Html.BeginForm("Edit", "Units", new { Id = Model.Units_ID }, FormMethod.Post))
                {

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label key="t-title-unitlevel" class="control-label">Types</label>
                                @if (Model.CanChangeLevel)
                                {
                                    @Html.DropDownListFor(q => q.LevelID, (ViewBag.Levels as IEnumerable<SelectListItem>).Where(q => int.Parse(q.Value) >= Model.LevelID), new { @class = "form-control select2", @onchange = "LevelChange(event.target.value)", @id = "LEVEID" });
                                }
                                else
                                {
                                    @*<label class="form-control" disabled id="LEVEID">@((Request.Cookies["lang"].Value=="ar"? Model.UnitLevel.Name_AR:Model.UnitLevel.Name_EN)+ " - " + Model.UnitLevel.Code)</label>*@
                                    <select class="form-control select2" id="LEVEID">
                                        @foreach (var i in (ViewBag.Levels as IEnumerable<SelectListItem>).Where(q => int.Parse(q.Value) >= Model.LevelID))
                                        {
                                            <option @(i.Value == Model.LevelID.ToString() ? "selected" : "") value="@i.Value" disabled>@i.Text</option>
                                        }

                                    </select>
                                    @Html.HiddenFor(q => q.LevelID, new { @required = "true" })

                                }


                            </div>
                            <div class="form-group">
                                <label key="t-subunits" class="control-label">Types</label>
                                @*<select id="SubUnits" class="form-control select2" onchange="SubUnitChange(event.target.value)">
                                    </select>*@
                                @Html.DropDownListFor(model => model.SubID, ViewBag.SubUnits as SelectList, new { @onchange = "SubUnitChange(event.target.value)", @id = "SubUnits", @class = "select2 form-control", @dir = @Request.Cookies["lang"].Value == "ar" ? "rtl" : "ltr" })
                            </div>
                            <div class="form-group">
                                <label class="control-label" key="t-name" for="name">Name</label>
                                @Html.TextBoxFor(q => q.Units_Name_AR, new { @class = "form-control", @name = "name", @id = "name", @required = "true" })
                            </div>
                            <div class="form-group">
                                <label key="t-location" class="control-label">Loactions</label>
                                @Html.DropDownListFor(q => q.Units_Location_ID, ViewBag.Locations as SelectList, new { @class = "form-control select2", @id = "LocationIDSelect", @onchange = "LocationChange(event.target.value)", @required = "true" })
                            </div>
                            <div class="form-group">
                                <div class="custom-control custom-checkbox mb-3 p-0">
                                    <label class="control-label" key="t-title-mainservice" for="servicetype">Main servicetype</label>
                                    @Html.DropDownListFor(model => model.ServiceTypeID, ViewBag.ServiceType as SelectList, new { @class = "select2 form-control", @dir = @Request.Cookies["lang"].Value == "ar" ? "rtl" : "ltr", @required = "true" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="custom-control custom-checkbox mb-3 p-0">
                                    <label class="control-label" key="t-requesttype" for="Units_ReqType">ReqTypes</label>
                                    @Html.ListBoxFor(model => model.Units_ReqType, ViewBag.ReqTypes as SelectList, new { @class = "select2 form-control select2-multiple", @required = "true", @id = "Units_ReqType", @multiple = "multiple", @dir = @Request.Cookies["lang"].Value == "ar" ? "rtl" : "ltr" })
                                </div>
                            </div>

                            @if (Model.IS_Mostafid || (bool)ViewBag.ViewMostafid)
                            {
                                <div class="form-group">
                                    <div class="custom-control custom-checkbox mb-3">
                                        @Html.CheckBoxFor(q => q.IS_Mostafid, new { @class = "custom-control-input", @name = "Ename", @id = "customCheck1", @type = "checkbox" })
                                        <label class="custom-control-label" key="t-ismostafid" for="customCheck1">ISMostafid</label>
                                    </div>
                                </div>
                            }
                            @Html.HiddenFor(q => q.SubID, new { @id = "SubID" })
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group" style="display:inline-flex;width: 100%;margin:0">
                                <div style="width: 65%; padding: 0 3px;">
                                    <label key="t-unittypes" class="control-label">Unit Type</label>
                                    @*<select id="UnitType" class="form-control select2" onchange="UnitTypeChange(event.target.value)">
                                        </select>*@
                                    @Html.DropDownListFor(model => model.Units_Type_ID, ViewBag.Units_Types as SelectList, new { @onchange = "UnitTypeChange(event.target.value)", @required = "true", @id = "UnitType", @class = "select2 form-control", @dir = @Request.Cookies["lang"].Value == "ar" ? "rtl" : "ltr" })

                                </div>
                                <div class="form-group" style="width: 35%; padding: 0 3px;margin: 0;">
                                    <label key="t-title-code" class="control-label">@(lang == "ar" ? Model.Units_Type.Units_Type_Name_AR : Model.Units_Type.Units_Type_Name_EN)</label>
                                    <label id="TypeCode" style="width: 100%; padding: 5px;">@Model.Units_Type.Code</label>
                                </div>
                            </div>
                            <div class="form-group" style="display:inline-flex;width: 100%;height:70px;margin: 9px 0 11px 0;">
                                <div style="width: 65%; padding: 0 3px;">
                                    <label key="t-title-subunittypes" class="control-label"></label>
                                    <label id="SubTypeLevel" style="width: 100%; padding:0 5px; margin:0;height: 36px;"></label>
                                </div>
                                <div style="width: 35%; padding: 0 3px">
                                    <label key="t-title-sub-code" class="control-label">SubTypeCode</label>
                                    <label id="SubTypeCode" style="width: 100%; padding:0 5px; margin:0;height: 36px;"></label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" key="t-enname" for="Ename">ENNAME</label>
                                @Html.TextBoxFor(q => q.Units_Name_EN, new { @class = "form-control en-font", @name = "Ename", @id = "Ename", @required = "true" })
                            </div>

                            <div class="form-group">
                                <label key="t-title-buildnum" for="Ename" class="control-label">Building</label>
                                <div style="display:inline-flex;width:100%;">
                                    <select onchange="BuildChange()" class="form-control  en-font BuldingNumber" name="Ename" id="Ename" style="padding:0 5px">
                                        @foreach (var i in new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 })
                                        {
                                            <option value="@i" @(i.ToString()[0] == Model.Building_Number[2] ? "selected" : "")>@i</option>
                                        }
                                    </select>
                                    <select onchange="BuildChange()" class="form-control  en-font BuldingNumber" name="Ename" id="Ename" style="padding:0 5px">
                                        @foreach (var i in new List<int> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 })
                                        {
                                            <option value="@i" @(i.ToString()[0] == Model.Building_Number[1] ? "selected" : "")>@i</option>
                                        }
                                    </select>
                                    <select onchange="BuildChange()" class="form-control  en-font BuldingNumber" name="Ename" id="Ename" style="padding:0 5px">
                                        @foreach (var i in new List<string> { "A", "D", "M", "F", "S", "R", "H" })
                                        {
                                            <option value="@i" @(i[0] == Model.Building_Number[0] ? "selected" : "")>@i</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="custom-control custom-checkbox mb-3 p-0">
                                    <label class="control-label" key="t-title-subservice" for="servicetype">Sub servicetype</label>
                                    @Html.ListBoxFor(model => model.Units_ServiceType, ViewBag.ServiceType as SelectList, new { @class = "select2 form-control select2-multiple", @multiple = "multiple", @dir = @Request.Cookies["lang"].Value == "ar" ? "rtl" : "ltr" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label" key="t-title-Unitcode" for="Ename">UnitCode</label>

                                <!--<input class="form-control" value="@Model.Code" id="unitCode" disabled readonly--> @*onkeyup="UnitCodeChange(false, event.target.value==''?'0':event.target.value)"*@ <!--/>-->
                                @Html.TextBoxFor(q => q.Code, new { @class = "form-control", @required = "true", @name = "unitCode", @maxlength = (ViewBag.Levels as IEnumerable<SelectListItem>).First(q => q.Value == Model.LevelID.ToString()).Value.Split('-')[0] == "1" ? "1" : "2", @minlength = (ViewBag.Levels as IEnumerable<SelectListItem>).First(q => q.Value == Model.LevelID.ToString()).Value.Split('-')[0] == "1" ? "1" : "2", @id = "unitCode" })
                                @*<label class="valid-feedback" id="UnitCodeFeedback" style="color:red;">@(Request.Cookies["lang"]?.Value=="ar"?"عذرا،هذا الرقم مستخدم":"Sorry,this code is Used")</label>*@
                            </div>

                            @Html.HiddenFor(q => q.Units_Type_ID, new { @id = "TypeID", @required = "true" })
                            @Html.HiddenFor(q => q.Code, new { @id = "defCode", @required = "true" })
                            @Html.HiddenFor(q => q.Building_Number, new { @id = "BuildNum", @required = "true" })
                            @Html.HiddenFor(q => q.Ref_Number, new { @id = "RefNum", @required = "true" })
                        </div>
                    </div>
                    <button key="t-save" id="submitUnit" type="button" class="btn btn-primary mr-1 waves-effect waves-light">Save Changes</button>
                    <button type="submit" style="display:none !important" id="saveUnit" class="btn btn-primary mr-1 waves-effect waves-light"></button>
                    @Html.ActionLink("Cancel", "Home", "Units", null, new { @class = "btn btn-secondary waves-effect", @key = "t-cancel" })
                }
            </div>
        </div>
    </div>
</div>
<script src="~/assets/libs/jquery/jquery.min.js"></script>
<script src="~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Sweet Alerts js -->
<script src="~/assets/libs/sweetalert2/sweetalert2.min.js"></script>
<script>
	let UnitTypes = [];
	let count = 0;
	$.ajax({
			url: "/Units/getTypeOFUnit?id=" +$('#SubUnits').val() , success: function (d) {
				var lang = document.getElementById("lang").value
				$('#SubTypeLevel').text(lang == "ar" ? d["Units_Type_Name_AR"] : d["Units_Type_Name_EN"]);
				$('#SubTypeCode').text(d["Code"]);
			}, error: function (ee) {
				//console.log("error", ee)
			}
		})
	function getUnitTypes(ID) {
		$.ajax({
			url: `/Units/getUnitTypes?id=${$('#LEVEID option:selected').val()}`, success: function (e) {
				UnitTypes = e;
				var select = document.getElementById('UnitType');
				select.innerHTML = ``;
				if (e.length != 0) {
					var lang = document.getElementById("lang").value
					e.forEach(d => {
						select.innerHTML += `<option value="${d["Units_Type_ID"]}">${lang == "ar" ? d["Units_Type_Name_AR"] : d["Units_Type_Name_EN"]}</option>`
					})
					if (count == 0) {
						let SS = $('#TypeID').val()
						let CodeView = UnitTypes.find(q => q.Units_Type_ID == SS)
						if (CodeView != null && CodeView != undefined) {
							$('#UnitType').val(SS)
							$('#TypeCode').text(CodeView.Code);
						}
						count++;
					}
					else {
						$('#TypeID').val(e[0]["Units_Type_ID"])
						let SS = $('#TypeID').val()
						let CodeView = UnitTypes.find(q => q.Units_Type_ID == SS)

							$('#UnitType').val(SS)
							$('#TypeCode').text(CodeView.Code);

					}
					UnitCodeChange(true)
				}
			}, error: function (ee) {
				//console.log("error", ee)
			}
		})
	}
	function BuildChange() {
		let BuildngsControls = document.getElementsByClassName('BuldingNumber')

		let BuildNumber = ([...BuildngsControls]).reduce(function (a, c) {
			if (a.value == undefined)
				return c.value + a;
			else
				return c.value + a.value
		})

		$('#BuildNum').val(BuildNumber)
	}
	function LevelChange(eve) {
		ValidateCode();
		getUnitTypes(eve)
		$.ajax({
			url: `/Units/getUnits?id=${eve}&uID=${$('#UnitID').val()}`, success: function (e) {
				var select = document.getElementById('SubUnits');
				select.innerHTML = ``;
				if (e.length == 0) {
					$('#unitCode').attr('maxlength', "1");
					$('#unitCode').attr('minlength', "1");
					SubUnitChange(null)
				}
				else {
					$('#unitCode').attr('maxlength', "2");
					$('#unitCode').attr('minlength', "2");

					var lang = document.getElementById("lang").value
					e.forEach(d => {
						select.innerHTML += `<option value="${d["Units_ID"]}">${lang == "ar" ? d["Units_Name_AR"] : d["Units_Name_EN"]}</option>`
					})
					if ($('#SubID').val() == "")
						SubUnitChange(e[0]["Units_ID"]);
					else {
						select.value = $('#SubID').val();
						SubUnitChange($('#SubID').val())
					}
				}
			}, error: function (ee) {
				event.stopPropagation();
				//console.log("error", ee)
			}
		})
	}
	function UnitTypeChange(ID) {
		/*if (count != 0) {*/
			let CodeView = UnitTypes.find(q => q.Units_Type_ID == ID)

			if (CodeView != null) {
				$('#TypeID').val(ID)
				$('#UnitType').val(ID)
				$('#TypeCode').text(CodeView.Code);
			}
			UnitCodeChange(false);
		/*}*/
	}
	function SubUnitChange(val) {
		//console.log("SubUnitChange", val)
		$('#SubID').val(val);
		if (val == null) {
			$('#SubTypeLevel').text("0");
			$('#SubTypeCode').text("0");
			return;
		}
		$.ajax({
			url: "/Units/getTypeOFUnit?id=" + val, success: function (d) {
				var lang = document.getElementById("lang").value
				$('#SubTypeLevel').text(lang == "ar" ? d["Units_Type_Name_AR"] : d["Units_Type_Name_EN"]);
				$('#SubTypeCode').text(d["Code"]);
			}, error: function (ee) {
				//console.log("error", ee)
			}
		})
		UnitCodeChange(true);
		//console.log("Local:" + $('#RefNum').val())
		$.ajax({
			url: `/Units/GetCode?code=${$('#RefNum').val()}&id=${val}&Unit_Code=${$('#unitCode').val()}&t_code=${$('#TypeCode').text()}&lvl=${$('#LEVEID option:selected').val()}&locationID=${$('#LocationIDSelect').val()}`, success: function (dd) {
				//console.log(dd, JSON.parse(dd)["Code"], JSON.parse(dd)["Code"].split(''));
				let Code = JSON.parse(dd)["Code"].split('');
				([...document.getElementsByClassName('Genratedcode')]).map((le, i) => {
					le.value = Code[i]
				})
				@{ /*"Assign Retruned code if faild to genrate code 'index outside'"*/}
				let index = $("#LEVEID option:selected").text().split(' - ')[0] - 1;
				if (isNaN(index))
					index = $("#LEVEID").text().split(' - ')[1] - 1;
				let startIn = 3 + (index == 0 ? 1 : index * 3);
					//startIn += 1;
				if (index == 0) {
					$('#unitCode').val(Code[startIn + 1])
				}
				else {
					$('#unitCode').val(Code[startIn + 1] + Code[startIn + 2])
				}
				$('#RefNum').val(JSON.parse(dd)["Code"])
			}
		})
	}
	function LocationChange(ID) {
		$('#CodeGenrateDiv input:nth-of-type(4)').val(ID)
	}
	function UnitCodeChange(ISLevelChange, change = "", Intit = false) {
		let index = $("#LEVEID option:selected").text().split(' - ')[0] - 1
		if (isNaN(index))
			index = $("#LEVEID").text().split(' - ')[0] - 1;
		//debugger
		let startIn = 3 + (index == 0 ? 1 : index * 3);
		startIn += 1;
		//console.log("levelChange=" + ISLevelChange, " INIT=" + Intit)
		//console.log(startIn, index, $('#TypeCode').text(), $('#unitCode').val() == "" ? "0" : $('#unitCode').val(),change)
		if (index == 0) {
			$(`#CodeGenrateDiv input:nth-of-type(${startIn})`).val($('#TypeCode').text())
			if (Intit)
				$(`#CodeGenrateDiv input:nth-of-type(${startIn + 1})`).val($('#unitCode').val() == "" ? "0" : $('#unitCode').val())
			@{
				//if (change != "") {
				//	$(`#CodeGenrateDiv input:nth-of-type(${startIn + 1})`).val(change)
				//	$('#unitCode').val(change)
				//}
			}
			startIn += 2
		}
		else {
			if (ISLevelChange)
				for (var i = 5; i < startIn; i++)
					document.querySelector(`#CodeGenrateDiv input:nth-of-type(${i})`).value = "0"
				//console.log("LevelChange")
			let UnitCode = $('#unitCode').val() == "" ? "00" : $('#unitCode').val()
			if (UnitCode.length == 1)
				UnitCode = "0" + UnitCode
			document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn})`).value = $('#TypeCode').text()
			document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn + 1})`).value = UnitCode.charAt(0)
			document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn + 2})`).value = UnitCode.charAt(1)

			@{
				//if (change != "") {
				//	if (change.length == 1)
				//		change = "0" + change
				//	document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn + 1})`).value = change.charAt(0)
				//	document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn + 2})`).value = change.charAt(1)
				//	$('#unitCode').val(change)
				//}
			}
			startIn += 3
		}
		if (ISLevelChange) {
			//console.log("Delete From:" + startIn)
			for (startIn; startIn <= 15; startIn++) {
				//console.log(startIn)
				document.querySelector(`#CodeGenrateDiv input:nth-of-type(${startIn})`).value = "0"
			}
		}

		let BuildngsControls = document.querySelectorAll('#CodeGenrateDiv input')

		let BuildNumber = ([...BuildngsControls]).reverse().reduce(function (a, c) {
			if (a.value == undefined)
				return c.value + a;
			else
				return c.value + a.value
		})
		$('#RefNum').val(BuildNumber)
	}
	$(document).ready(ssss => {
		$.ajax({
			url: `/Units/getUnitTypes?id=${$('#LEVEID option:selected').val()}`, success: function (e) {
				UnitTypes = e;
			}, error: function (ee) {
				//console.log("error", ee)
			}
		})
		$(document).on("focusout", "#unitCode", i => {
            $('#unitCode').val($('#unitCode').val() == '' ? $("#defCode").val() : $('#unitCode').val());
            ValidateCode();
		});
		$('#submitUnit').click(e => {
			Swal.fire({
			title:"@( Request.Cookies["lang"].Value == "ar" ? "هل انت متاكد من حفظ هذه الفئة؟" : "Are you sure To Save this unit?")",
			text: "@(Request.Cookies["lang"].Value == "ar" ? "لن تستطيع ارجاع ذلك بعد اتمام العملية!" : "You won't be able to revert this!")",
			icon: "warning",
			showCancelButton: true,
			focusConfirm: false,
			confirmButtonColor: "#34c38f",
			cancelButtonColor: "#f46a6a",
			confirmButtonText: "@(Request.Cookies["lang"].Value == "ar" ? "موافق , احفظ الفئة" : "Yes, Save it!")",
			cancelButtonText: "@(Request.Cookies["lang"].Value == "ar" ? "الغاء العملية" : "Cancel Process")",
		}).then(function (result) {
			if (result.value)
				$('#saveUnit').click();
		});
		})
	})
    $('form input').keydown(function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            return false;
        }
    });
</script>
<script>
	function ValidateCode() {
		$.ajax({
			url: `/Units/CheckCode?code=${$('#unitCode').val()}&levelID=${$('#LEVEID option:selected').val()}&uID=${$('#UnitID').val()}`, method: "POST", success: function (data) {
				if (!data['success'])
					LaunchErrorHandelare();
				else {
                    let index = $("#LEVEID option:selected").text().split(' - ')[0] - 1
                    if (isNaN(index))
                        index = $("#LEVEID").text().split(' - ')[0] - 1;
                    //debugger
                    let startIn = 3 + (index == 0 ? 1 : index * 3);
					startIn += 1;
					var code_val = $('#unitCode').val();
					if (index == 0)
                        $(`#CodeGenrateDiv input:nth-of-type(${startIn})`).val(code_val[0])
					else {
                        $(`#CodeGenrateDiv input:nth-of-type(${startIn + 1})`).val(code_val[0])
                        $(`#CodeGenrateDiv input:nth-of-type(${startIn + 2})`).val(code_val[1])
                    }
                }

			}, error: function () {
				LaunchErrorHandelare();
			}
		})
	}
	//$('#unitCode').on('change', e => ValidateCode());

	function LaunchErrorHandelare() {
		$('#unitCode').val($('#defCode').val())
		Swal.fire({
			title: "@( Request.Cookies["lang"].Value == "ar" ? "لا يمكن استخدام هذا الرقم" : "You Can't Use this Code.")",
			icon: "warning",
			focusConfirm: true,
			confirmButtonColor: "#34c38f",
			cancelButtonColor: "#f46a6a",
			confirmButtonText: "@(Request.Cookies["lang"].Value == "ar" ? "موافق" : "Ok")",
		});
	}
</script>
<!-- end row -->
<!-- JAVASCRIPT -->
<script src="~/assets/libs/metismenu/metisMenu.min.js"></script>
<script src="~/assets/libs/simplebar/simplebar.min.js"></script>
<script src="~/assets/libs/node-waves/waves.min.js"></script>
<script src="~/assets/js/lang/jquery.multiLanguage.js"></script>

<!-- select 2 plugin -->
<script src="~/assets/libs/select2/js/select2.min.js"></script>

<!-- dropzone plugin -->
<script src="~/assets/libs/dropzone/min/dropzone.min.js"></script>

<!-- init js -->
<script src="~/assets/js/pages/ecommerce-select2.init.js"></script>

<!-- App js -->
<script src="~/assets/js/app.js"></script>
